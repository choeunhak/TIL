//버블정렬 옆에있는값과 비교해서 더 작은값을 앞으로 보낸다
//시간복잡도
//선택정렬과 마찬가지고 10 9 8 7...1 이기 때문에 N^2임 
//하지만 실제론  선택정렬보다 훨씬 느리게 작동함 그 이유는  버블정렬은 당장 옆에있는것과 바꾸는 연산(스와핑)이 많아지기때문
// 선택정렬은 마지막에만 교차해주고 버블정렬은 매번 교차해줘야함//대체로 가장 느림 
#include <stdio.h>

int main(void){
	int i, j, temp;
	int array[10]= {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
	for(i=0; i<10; i++){
		for(j=0;j<9-i;j++){//9에서 i를 빼주는 이유는  버블정렬은 점점 뒤에서부터 앞으로 집합의크기를 감소시키기 때문 
			if(array[j]>array[j+1]){//왼쪽의 값이 오른쪽의 값보다 크다면 서로 위치를 바꿔줌 
			
			//스와핑
				temp=array[j];
				array[j]=array[j+1];
				array[j+1]=temp;
				
			}
		}
	};
	
	//정렬이 된 이후에 출력
	for(i=0; i<10; i++){
		printf("%d ", array[i]);
	} 
	return 0;

	
	
}
